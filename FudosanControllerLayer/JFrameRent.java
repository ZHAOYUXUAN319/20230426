/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FudosanControllerLayer;

import FudosanBean.BukenBean;
import FudosanBean.HeyaBean;
import FudosanBean.SaleContractBean;
import FudosanBean.TintaiTyukaiBean;
import FudosanService.BukenService;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hangt
 */
public class JFrameRent extends javax.swing.JFrame {

    /**
     * Creates new form JFrameRent
     */
    public JFrameRent() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton16 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jButton17 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("管理画面");

        jButton1.setText("賃貸一覧");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("賃貸情報更新");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FudosanBean/戻る.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "賃貸ID", "賃貸ステータス", "物件ID", "買手", "賃貸期日", "金額", "仲介ID", "手数料"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, true, true, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
        }

        jButton4.setText("確認");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "金額合計"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "物件ID", "物件名", "物件住所", "物件タイプ", "物件面積", "物件金額", "物件状態"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jButton5.setText("物件一覧");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("物件新規");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("削除");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("編集");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("中身部屋");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "部屋ID", "所属物件ID", "部屋名", "階数", "家賃", "駅", "面積", "駅から距離"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable5);

        jLabel1.setFont(new java.awt.Font("MS UI Gothic", 1, 24)); // NOI18N
        jLabel1.setText("賃料");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "上限範囲" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("MS UI Gothic", 1, 24)); // NOI18N
        jLabel5.setText("専有面積");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "上限範囲" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jCheckBox2.setFont(new java.awt.Font("MS UI Gothic", 1, 24)); // NOI18N
        jCheckBox2.setText("二階以上");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("MS UI Gothic", 1, 24)); // NOI18N
        jLabel2.setText("賃料");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "上限範囲" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("MS UI Gothic", 1, 24)); // NOI18N
        jLabel6.setText("専有面積");

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "上限範囲" }));
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });

        jCheckBox4.setFont(new java.awt.Font("MS UI Gothic", 1, 24)); // NOI18N
        jCheckBox4.setText("二階以上");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jButton11.setText("部屋一覧");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("削除");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("新規登録");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("編集");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton10.setText("賃貸ステータス更新");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton15.setText("検索");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("検索");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("検索");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jComboBox4, javax.swing.GroupLayout.Alignment.LEADING, 0, 165, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCheckBox2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(63, 63, 63)
                                        .addComponent(jTextField1)))))
                        .addGap(89, 89, 89)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox6, 0, 130, Short.MAX_VALUE)
                                .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jCheckBox4))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 833, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField3)
                            .addComponent(jScrollPane1))))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE)
                                .addComponent(jScrollPane3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(102, 102, 102)
                                .addComponent(jCheckBox2)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField3)
                                        .addGap(41, 41, 41)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(92, 92, 92))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(jCheckBox4)))
                .addContainerGap(115, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();
        new JFrameAdministrator().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        getlistInfo();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
        int row = jTable1.getSelectedRow();
        SaleContractBean bb = new SaleContractBean();
        bb.setContractId(Integer.parseInt(df.getValueAt(row, 0).toString()));
        bb.setPropertyId(Integer.parseInt(df.getValueAt(row, 1).toString()));
        bb.setBuyerName(df.getValueAt(row, 2).toString());
        bb.setContractDate(df.getValueAt(row, 3).toString());
        bb.setPrice(df.getValueAt(row, 4).toString());

        BukenService bs = new BukenService();
        try {
            bs.saleContractBeanUpdate(bb);
        } catch (SQLException ex) {
            Logger.getLogger(JFrameRent.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(df.getValueAt(row, 0));
        System.out.println(df.getValueAt(row, 1));
        System.out.println(df.getValueAt(row, 2));
        System.out.println(df.getValueAt(row, 3));
        System.out.println(df.getValueAt(row, 4));
        getlistInfo();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        BukenService list = new BukenService();
        List<TintaiTyukaiBean> listinfo = list.listInfoSaleContract();
        DefaultTableModel df = (DefaultTableModel) jTable2.getModel();
        df.setRowCount(0);
        int sum = 0;
        for (TintaiTyukaiBean c : listinfo) {
            String priceStr = c.getPrice();
            int price = Integer.parseInt(priceStr);
            sum += price;
            //df.addRow(new Object[]{c.getPrice()});
        }
        //System.out.println("合計: " + sum);
        Object[] totalRow = new Object[]{sum};
        df.addRow(totalRow);


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        getlistInfobuken();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        new BukenSinKiToroku().setVisible(true);

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
        int row = jTable3.getSelectedRow();

        BukenBean bukenBean = new BukenBean();
        bukenBean.setPropertyId(Integer.parseInt(df.getValueAt(row, 0).toString()));
        BukenService bukenService = new BukenService();
        try {
            bukenService.bukenDelete(bukenBean);

        } catch (SQLException ex) {
            Logger.getLogger(BukenYichiran.class.getName()).log(Level.SEVERE, null, ex);
        }
        getlistInfobuken();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
        int row = jTable3.getSelectedRow();
        BukenBean bb = new BukenBean();
        bb.setPropertyId(Integer.parseInt(df.getValueAt(row, 0).toString()));
        bb.setPropertyName(df.getValueAt(row, 1).toString());
        bb.setAddress(df.getValueAt(row, 2).toString());
        bb.setPropertyType(df.getValueAt(row, 3).toString());
        bb.setPropertyArea(df.getValueAt(row, 4).toString());
        bb.setPrice(df.getValueAt(row, 5).toString());
        bb.setStatus(df.getValueAt(row, 6).toString());

        BukenService bs = new BukenService();
        try {
            bs.bukenUpdate(bb);
        } catch (SQLException ex) {
            Logger.getLogger(BukenYichiran.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(df.getValueAt(row, 0));
        System.out.println(df.getValueAt(row, 1));
        System.out.println(df.getValueAt(row, 2));
        System.out.println(df.getValueAt(row, 3));
        System.out.println(df.getValueAt(row, 4));
        System.out.println(df.getValueAt(row, 5));
        getlistInfobuken();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        //jTable5
        DefaultTableModel model = (DefaultTableModel) jTable5.getModel();
        //データをクリアする
        model.setRowCount(0);
        DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
        int row = jTable3.getSelectedRow();
        HeyaBean heyaBean = new HeyaBean();
        BukenBean bukenBean = new BukenBean();
        bukenBean.setPropertyId(Integer.parseInt(df.getValueAt(row, 0).toString()));
        BukenService list = new BukenService();
        DefaultTableModel dff = (DefaultTableModel) jTable5.getModel();
        //強制的に文字列に変更する
        List<HeyaBean> listinfo = list.bukeheya(String.valueOf(bukenBean.getPropertyId()));
        for (HeyaBean c : listinfo) {
            dff.addRow(new Object[]{c.getRoomId(), c.getSyozokuPropertyId(), c.getRoomName(), c.getRoomFloor(),
                c.getPrice(), c.getStation(), c.getRoomArea(), c.getMinutesFromStation()});
        }

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
//        //jTable３のデータを取得
//        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
//        //データをクリアする
//        model.setRowCount(0);

        JComboBox<String> comboBox = new JComboBox<>();
        comboBox.addItem("20000000");
        comboBox.addItem("40000000");
        comboBox.addItem("60000000");
        comboBox.addItem("80000000");
        comboBox.addItem("100000000");

        // イベント リスナーを追加する(添加事件监听器)
        comboBox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // 获取当前选定的选项
                String selectedValue = (String) comboBox.getSelectedItem();

                // 打印选定的选项
                System.out.println("当前选定的选项是：" + selectedValue);
                BukenService bukenService = new BukenService();
                bukenService.kensaku(selectedValue);

                BukenService list = new BukenService();
                List<BukenBean> listinfo = list.kensaku(selectedValue);
                DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
                df.setRowCount(0);
                for (BukenBean c : listinfo) {
                    df.addRow(new Object[]{c.getPropertyId(), c.getPropertyName(), c.getAddress(), c.getPropertyType(), c.getPropertyArea(), c.getPrice()});
                }

            }
        });

        // JComboBox デモ ウィンドウの作成(创建 JComboBox Demo 窗口)
        JFrame comboBoxDemoFrame = new JFrame("ComboBox Demo");
        comboBoxDemoFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        comboBoxDemoFrame.getContentPane().add(comboBox);
        comboBoxDemoFrame.pack();
        comboBoxDemoFrame.setVisible(true);
        // WindowListener リスナーを追加する(添加 WindowListener 监听器)
        comboBoxDemoFrame.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                super.windowClosed(e);
            }
        });
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
        JComboBox<String> comboBox = new JComboBox<>();
        comboBox.addItem("50");
        comboBox.addItem("100");
        comboBox.addItem("150");
        comboBox.addItem("200");
        comboBox.addItem("250");
        comboBox.addItem("300");

        // イベント リスナーを追加する(添加事件监听器)
        comboBox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // 获取当前选定的选项
                String selectedValue = (String) comboBox.getSelectedItem();

                // 打印选定的选项
                System.out.println("当前选定的选项是：" + selectedValue);
                BukenService bukenService = new BukenService();
                bukenService.areakensaku(selectedValue);

                BukenService list = new BukenService();
                List<BukenBean> listinfo = list.areakensaku(selectedValue);
                DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
                df.setRowCount(0);
                for (BukenBean c : listinfo) {
                    df.addRow(new Object[]{c.getPropertyId(), c.getPropertyName(), c.getAddress(), c.getPropertyType(), c.getPropertyArea(), c.getPrice()});
                }

            }
        });

        // JComboBox デモ ウィンドウの作成(创建 JComboBox Demo 窗口)
        JFrame comboBoxDemoFrame = new JFrame("ComboBox Demo");
        comboBoxDemoFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        comboBoxDemoFrame.getContentPane().add(comboBox);
        comboBoxDemoFrame.pack();
        comboBoxDemoFrame.setVisible(true);
        // WindowListener リスナーを追加する(添加 WindowListener 监听器)
        comboBoxDemoFrame.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                super.windowClosed(e);
            }
        });
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        JComboBox<String> comboBox = new JComboBox<>();
        comboBox.addItem("20000");
        comboBox.addItem("40000");
        comboBox.addItem("60000");
        comboBox.addItem("80000");
        comboBox.addItem("100000");

        // イベント リスナーを追加する(添加事件监听器)
        comboBox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // 获取当前选定的选项
                String selectedValue = (String) comboBox.getSelectedItem();

                // 打印选定的选项
                System.out.println("当前选定的选项是：" + selectedValue);
                BukenService bukenService = new BukenService();
                bukenService.kensaku(selectedValue);

                BukenService list = new BukenService();
                List<HeyaBean> listinfo = list.heyayatinkensaku(selectedValue);
                DefaultTableModel df = (DefaultTableModel) jTable5.getModel();
                df.setRowCount(0);
                for (HeyaBean c : listinfo) {
                    df.addRow(new Object[]{c.getRoomId(), c.getSyozokuPropertyId(), c.getRoomName(), c.getRoomFloor(), c.getPrice(), c.getStation(),
                        c.getRoomArea(), c.getMinutesFromStation()});
                }

            }
        });

        // JComboBox デモ ウィンドウの作成(创建 JComboBox Demo 窗口)
        JFrame comboBoxDemoFrame = new JFrame("ComboBox Demo");
        comboBoxDemoFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        comboBoxDemoFrame.getContentPane().add(comboBox);
        comboBoxDemoFrame.pack();
        comboBoxDemoFrame.setVisible(true);
        // WindowListener リスナーを追加する(添加 WindowListener 监听器)
        comboBoxDemoFrame.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                super.windowClosed(e);
            }
        });
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        // TODO add your handling code here:
        JComboBox<String> comboBox = new JComboBox<>();
        comboBox.addItem("10");
        comboBox.addItem("20");
        comboBox.addItem("30");
        comboBox.addItem("40");
        comboBox.addItem("50");
        comboBox.addItem("60");

        // イベント リスナーを追加する(添加事件监听器)
        comboBox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // 获取当前选定的选项
                String selectedValue = (String) comboBox.getSelectedItem();

                // 打印选定的选项
                System.out.println("当前选定的选项是：" + selectedValue);
                BukenService bukenService = new BukenService();
                bukenService.areakensaku(selectedValue);

                BukenService list = new BukenService();
                List<HeyaBean> listinfo = list.heyaareakensaku(selectedValue);
                DefaultTableModel df = (DefaultTableModel) jTable5.getModel();
                df.setRowCount(0);
                for (HeyaBean c : listinfo) {
                    df.addRow(new Object[]{c.getRoomId(), c.getSyozokuPropertyId(), c.getRoomName(), c.getRoomFloor(), c.getPrice(), c.getStation(),
                        c.getRoomArea(), c.getMinutesFromStation()});
                }

            }
        });

        // JComboBox デモ ウィンドウの作成(创建 JComboBox Demo 窗口)
        JFrame comboBoxDemoFrame = new JFrame("ComboBox Demo");
        comboBoxDemoFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        comboBoxDemoFrame.getContentPane().add(comboBox);
        comboBoxDemoFrame.pack();
        comboBoxDemoFrame.setVisible(true);
        // WindowListener リスナーを追加する(添加 WindowListener 监听器)
        comboBoxDemoFrame.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                super.windowClosed(e);
            }
        });
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        getlistInfoHeya();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel df = (DefaultTableModel) jTable5.getModel();
        int row = jTable5.getSelectedRow();

        HeyaBean heyaBean = new HeyaBean();
        heyaBean.setRoomId(Integer.parseInt(df.getValueAt(row, 0).toString()));
        BukenService heyaService = new BukenService();
        try {
            heyaService.heyeDelete(heyaBean);

        } catch (SQLException ex) {
            Logger.getLogger(BukenYichiran.class.getName()).log(Level.SEVERE, null, ex);
        }
        getlistInfoHeya();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        new HeyaSinkiToroku().setVisible(true);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel df = (DefaultTableModel) jTable5.getModel();
        int row = jTable5.getSelectedRow();
        HeyaBean bb = new HeyaBean();
        bb.setRoomId(Integer.parseInt(df.getValueAt(row, 0).toString()));
        bb.setSyozokuPropertyId(Integer.parseInt(df.getValueAt(row, 1).toString()));
        bb.setRoomName(df.getValueAt(row, 2).toString());
        bb.setRoomFloor(Integer.parseInt(df.getValueAt(row, 3).toString()));
        bb.setPrice(Integer.parseInt(df.getValueAt(row, 4).toString()));
        bb.setStation(df.getValueAt(row, 5).toString());
        bb.setRoomArea(Integer.parseInt(df.getValueAt(row, 6).toString()));
        bb.setMinutesFromStation(Integer.parseInt(df.getValueAt(row, 7).toString()));

        BukenService bs = new BukenService();
        try {
            bs.heyaUpdate(bb);
        } catch (SQLException ex) {
            Logger.getLogger(HeyaYichiran.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(df.getValueAt(row, 0));
        System.out.println(df.getValueAt(row, 1));
        System.out.println(df.getValueAt(row, 2));
        System.out.println(df.getValueAt(row, 3));
        System.out.println(df.getValueAt(row, 4));
        System.out.println(df.getValueAt(row, 5));
        System.out.println(df.getValueAt(row, 6));
        System.out.println(df.getValueAt(row, 7));

        getlistInfoHeya();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        bukennikaigetlistInfo();
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
        heyakaisulistInfo();
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
        int row = jTable1.getSelectedRow();
        //TintaiTyukaiBean bb = new TintaiTyukaiBean();
        BukenBean bb = new BukenBean();
        bb.setPropertyId(Integer.parseInt(df.getValueAt(row, 2).toString()));
        bb.setStatus(df.getValueAt(row, 1).toString());
//        bb.setPropertyId(Integer.parseInt(df.getValueAt(row, 2).toString()));
//        bb.setBuyerName(df.getValueAt(row, 2).toString());
//        bb.setContractDate(df.getValueAt(row, 3).toString());
//        bb.setPrice(df.getValueAt(row, 4).toString());

        BukenService bs = new BukenService();
        try {
            bs.tintaisutetasuUpdate(bb);
        } catch (SQLException ex) {
            Logger.getLogger(JFrameRent.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(df.getValueAt(row, 0));
        System.out.println(df.getValueAt(row, 1));
//        System.out.println(df.getValueAt(row, 2));
//        System.out.println(df.getValueAt(row, 3));
//        System.out.println(df.getValueAt(row, 4));

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        String id = jTextField1.getText();

        System.out.println("当前选定的选项是：" + id);
        BukenService bukenService = new BukenService();
        bukenService.bukenkensaku(id);

        BukenService list = new BukenService();
        List<BukenBean> listinfo = list.bukenkensaku(id);
        DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
        df.setRowCount(0);
        for (BukenBean c : listinfo) {
            df.addRow(new Object[]{c.getPropertyId(), c.getPropertyName(), c.getAddress(), c.getPropertyType(), c.getPropertyArea(), c.getPrice()});
        }


    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        String id = jTextField2.getText();

        System.out.println("当前选定的选项是：" + id);
        BukenService bukenService = new BukenService();
        bukenService.bukenkensaku(id);

        BukenService list = new BukenService();
        List<HeyaBean> listinfo = list.heyakensaku(id);
        DefaultTableModel df = (DefaultTableModel) jTable5.getModel();
        df.setRowCount(0);
        for (HeyaBean c : listinfo) {
            df.addRow(new Object[]{c.getRoomId(), c.getSyozokuPropertyId(), c.getRoomName(), c.getRoomFloor(), c.getPrice(),
                c.getStation(), c.getRoomArea(), c.getMinutesFromStation()});
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
          String id = jTextField3.getText();

        System.out.println("当前选定的选项是：" + id);
        BukenService bukenService = new BukenService();
        bukenService.tintaikensaku(id);

        BukenService list = new BukenService();
        List<TintaiTyukaiBean> listinfo = list.tintaikensaku(id);
        DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
        df.setRowCount(0);
        for (TintaiTyukaiBean c : listinfo) {
            df.addRow(new Object[]{c.getContractId(), c.getStatus(), c.getPropertyId(), c.getBuyerName(), c.getContractDate(), c.getPrice(),
                c.getCommissionId(), c.getCommissionFee()});
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameRent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameRent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameRent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameRent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameRent().setVisible(true);
            }
        });
    }
//賃貸一覧

    public void getlistInfo() {

        BukenService list = new BukenService();
        List<TintaiTyukaiBean> listinfo = list.listInfoSaleContract();
        DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
        df.setRowCount(0);
        for (TintaiTyukaiBean c : listinfo) {
            df.addRow(new Object[]{c.getContractId(), c.getStatus(), c.getPropertyId(), c.getBuyerName(), c.getContractDate(), c.getPrice(),
                c.getCommissionId(), c.getCommissionFee()});
        }
    }

//物件一覧

    public void getlistInfobuken() {

        BukenService list = new BukenService();
        List<BukenBean> listinfo = list.kanrisyabukenlistInfo();
        DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
        df.setRowCount(0);
        for (BukenBean c : listinfo) {
            df.addRow(new Object[]{c.getPropertyId(), c.getPropertyName(), c.getAddress(), c.getPropertyType(), c.getPropertyArea(), c.getPrice(), c.getStatus()});
        }
    }

    //管理者物件検索
    public void getlistInfobukenkensaku() {

        BukenService list = new BukenService();
        List<BukenBean> listinfo = list.kanrisyabukenlistInfo();
        DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
        df.setRowCount(0);
        for (BukenBean c : listinfo) {
            df.addRow(new Object[]{c.getPropertyId(), c.getPropertyName(), c.getAddress(), c.getPropertyType(), c.getPropertyArea(), c.getPrice(), c.getStatus()});
        }
    }
//物件2階以上一覧

    public void bukennikaigetlistInfo() {

        BukenService list = new BukenService();
        List<BukenBean> listinfo = list.listInfo();
        DefaultTableModel df = (DefaultTableModel) jTable3.getModel();
        df.setRowCount(0);
        for (BukenBean c : listinfo) {
            df.addRow(new Object[]{c.getPropertyId(), c.getPropertyName(), c.getAddress(), c.getPropertyType(), c.getPropertyArea(), c.getPrice()});
        }
    }

    //部屋2階以上一覧
    public void heyakaisulistInfo() {

        BukenService list = new BukenService();
        List<HeyaBean> listinfo = list.heyakaisulistInfo();
        DefaultTableModel df = (DefaultTableModel) jTable5.getModel();
        df.setRowCount(0);
        for (HeyaBean c : listinfo) {
            df.addRow(new Object[]{c.getRoomId(), c.getSyozokuPropertyId(), c.getRoomName(), c.getRoomFloor(), c.getPrice(),
                c.getStation(), c.getRoomArea(), c.getMinutesFromStation()});
        }
    }

    public void getlistInfoHeya() {

        BukenService listHeya = new BukenService();
        List<HeyaBean> listinfoHeya = listHeya.listInfoHeya();
        DefaultTableModel df = (DefaultTableModel) jTable5.getModel();
        df.setRowCount(0);
        for (HeyaBean c : listinfoHeya) {
            df.addRow(new Object[]{c.getRoomId(), c.getSyozokuPropertyId(), c.getRoomName(), c.getRoomFloor(), c.getPrice(),
                c.getStation(), c.getRoomArea(), c.getMinutesFromStation()});
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
